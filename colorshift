#!/usr/bin/env bash

RED=0
BLUE=0
GREEN=0
ALPHA=0
LIMIT=0
declare INITIAL

die() {
  echo "${1:-usage : ${0##*/} [ options ] }" 2>&1
  [ "$1" ] && exit 1
  cat > /dev/stdout <<EOF
  adjust hex color values

  options:
    -h | --help           show help
    -l | --limit          limit color output from wrapping around
    -r | --red <value>    modify red by <value>
    -g | --green <value>  modify green by <value>
    -b | --blue <value>   modify blue by <value>
    -a | --alpha <value>  modify alpha by <value>
EOF
  exit 0
}

while [[ "$#" -gt 0 ]]; do
  case "$1" in
    -h|--help)
      die
      ;;
    -l|--limit)
      LIMIT=1
      ;;
    -r|--red)
      RED="$2"
      shift
      ;;
    -g|--green)
      GREEN="$2"
      shift
      ;;
    -b|--blue)
      BLUE="$2"
      shift
      ;;
    -a|--alpha)
      ALPHA="$2"
      shift
      ;;
    *)
      INITIAL="$1"
      ;;
  esac
  shift
done

#
hex_addition() {
  : "${INITIAL/\#}"
  # Break up into RGBA
  ((r=16#${_:0:2},g=16#${_:2:2},b=16#${_:4:2},a=16#${_:6:2}))

  # Do math
  [ "$LIMIT" == "1" ] && {
    r=$(printf "0x%02X" $(("$r" + 0x"$RED")))
    g=$(printf "0x%02X" $(("$g" + 0x"$BLUE")))
    b=$(printf "0x%02X" $(("$b" + 0x"$GREEN")))
    a=$(printf "0x%02X" $(("$a" + 0x"$ALPHA")))
    if [ ${#r} -gt 4 ]; then
      r="0xFF"
    fi
    if [ ${#g} -gt 4 ]; then
      g="0xFF"
    fi
    if [ ${#b} -gt 4 ]; then
      b="0xFF"
    fi
    if [ ${#a} -gt 4 ]; then
      a="0xFF"
    fi
  } || {
    r=$(printf "0x%02X" $(( $(("$r" + 0x"$RED"))   % "0x100")))
    g=$(printf "0x%02X" $(( $(("$g" + 0x"$GREEN")) % "0x100")))
    b=$(printf "0x%02X" $(( $(("$b" + 0x"$BLUE"))  % "0x100")))
    a=$(printf "0x%02X" $(( $(("$a" + 0x"$ALPHA")) % "0x100")))
  }

  # Print final output
  echo "#${r/0x}${g/0x}${b/0x}${a/0x}"
}

hex_addition
